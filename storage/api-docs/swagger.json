{

    "openapi": "3.0.0",
    "info": {
        "title": "Organic-Web",
        "description": "",
        "version": "1.0.0"
    },
    "servers": [

        {
            "url": "http://127.0.0.1:8000"
        }
    ],
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "55d878b9fba2a7d46a2a488e3f31cab6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "phone",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "9876543210"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "user"
                                    },
                                    "pro_pic": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "is_verfiy_email": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_verfiy_phone": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "is_special": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "default_language": {
                                        "type": "string",
                                        "example": "en"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "9876543210"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                },
                                                "pro_pic": {
                                                    "type": "string",
                                                    "example": "profile.jpg"
                                                },
                                                "is_verfiy_email": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "is_verfiy_phone": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "is_special": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "default_language": {
                                                    "type": "string",
                                                    "example": "en"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-04-21T14:22:19+05:30"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-04-21T14:22:19+05:30"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cms": {
  "get": {
    "summary": "Fetch active CMS records",
    "tags": ["CMS"],
    "parameters": [
      {
        "name": "page",
        "in": "query",
        "description": "Page number for pagination",
        "required": false,
        "schema": {
          "type": "integer",
          "example": 1
        }
      },
      {
        "name": "limit",
        "in": "query",
        "description": "Number of records per page",
        "required": false,
        "schema": {
          "type": "integer",
          "example": 10
        }
      }
    ],
    "responses": {
      "200": {
        "description": "Cms fetched successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean", "example": true },
                "message": { "type": "string", "example": "Cms fetched successfully" },
                "data": { "type": "object" }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error"
      }
    }
  }
        },
        "/api/login": {
  "post": {
    "summary": "User Login",
    "tags": ["Authentication"],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "example": "user@example.com"
              },
              "password": {
                "type": "string",
                "format": "password",
                "example": "secret123"
              }
            },
            "required": ["email", "password"]
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "Login successful",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer", "example": 1 },
                    "name": { "type": "string", "example": "John Doe" },
                    "email": { "type": "string", "example": "user@example.com" }

                  }
                },
                "token": {
                  "type": "string",
                  "example": "eyJ0eXAiOiJKV1QiLCJhbGci..."
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Invalid credentials",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": ["These credentials do not Match our Records."]
                }
              }
            }
          }
        }
      }
    }
  }
        },
        "/api/notifications": {
        "get": {
      "summary": "Fetch user-specific notifications in preferred language",
      "tags": ["Notifications"],
      "security": [
      {
        "bearerAuth": []
      }
     ],
     "parameters": [
      {
        "name": "page",
        "in": "query",
        "description": "Page number for pagination",
        "required": false,
        "schema": {
          "type": "integer",
          "example": 1
        }
      },
      {
        "name": "limit",
        "in": "query",
        "description": "Number of records per page",
        "required": false,
        "schema": {
          "type": "integer",
          "example": 10
        }
      }
    ],
    "responses": {
      "200": {
        "description": "Notifications fetched successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean", "example": true },
                "message": { "type": "string", "example": "Notifications" },
                "data": {
                  "type": "object",
                  "properties": {
                    "current_page": { "type": "integer", "example": 1 },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "integer", "example": 12 },
                          "displayTitle": { "type": "string", "example": "Welcome Notification" },
                          "displayDetails": { "type": "string", "example": "You have a new message." },
                          "created_at": { "type": "string", "format": "date-time", "example": "2025-04-22T12:34:56Z" }
                        }
                      }
                    },
                    "last_page": { "type": "integer", "example": 5 },
                    "total": { "type": "integer", "example": 50 }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized – Token missing or invalid"
      },
      "500": {
        "description": "Internal server error"
      }
    }
  }
        },
        "/api/check-email": {
              "post": {
                "summary": "Check if email is registered",
                "tags": ["User"],
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "format": "email",
                            "example": "user@example.com"
                          }
                        },
                        "required": ["email"]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Successful response",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean"
                            },
                            "message": {
                              "type": "string"
                            },
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": { "type": "integer" },
                                "name": { "type": "string" },
                                "email": { "type": "string" },
                                "token": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "400": {
                    "description": "Validation error",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "success": { "type": "boolean" },
                            "message": { "type": "string" },
                            "errors": { "type": "object" }
                          }
                        }
                      }
                    }
                  },
                  "500": {
                    "description": "Internal server error"
                  }
                }
              }
        },
        "/api/send-otp": {
              "post": {
                "summary": "Send OTP to phone number",
                "tags": ["User"],
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "phone": {
                            "type": "string",
                            "example": "1234567890"
                          }
                        },
                        "required": ["phone"]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "OTP sent successfully",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean"
                            },
                            "message": {
                              "type": "string"
                            },
                            "data": {
                              "type": "object",
                              "properties": {
                                "isNewUser": { "type": "boolean" },
                                "otp": { "type": "integer" }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "400": {
                    "description": "Validation error",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "success": { "type": "boolean" },
                            "message": { "type": "string" },
                            "errors": { "type": "object" }
                          }
                        }
                      }
                    }
                  },
                  "500": {
                    "description": "Internal server error"
                  }
                }
              }
        },
        "/api/verify-otp": {
              "post": {
                "summary": "Verify OTP sent to phone number",
                "tags": ["User"],
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "phone": {
                            "type": "string",
                            "example": "1234567890"
                          },
                          "otp": {
                            "type": "string",
                            "example": "1234"
                          },
                          "latitude": {
                            "type": "string",
                            "example": "40.7128"
                          },
                          "longitude": {
                            "type": "string",
                            "example": "74.0060"
                          }
                        },
                        "required": ["phone", "otp"]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "OTP verified successfully",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean"
                            },
                            "message": {
                              "type": "string"
                            },
                            "data": {
                              "type": "object",
                              "properties": {
                                "token": { "type": "string" },
                                "user": {
                                  "type": "object",
                                  "properties": {
                                    "id": { "type": "integer" },
                                    "name": { "type": "string" },
                                    "email": { "type": "string" },
                                    "phone": { "type": "string" }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "400": {
                    "description": "Validation error",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "success": { "type": "boolean" },
                            "message": { "type": "string" },
                            "errors": { "type": "object" }
                          }
                        }
                      }
                    }
                  },
                  "500": {
                    "description": "Internal server error"
                  }
                }
              }
        },
        "/api/user-profile": {
              "get": {
                "summary": "Get user profile",
                "tags": ["User"],
                "responses": {
                  "200": {
                    "description": "User profile retrieved successfully",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "success": {
                              "type": "boolean"
                            },
                            "message": {
                              "type": "string"
                            },
                            "data": {
                              "type": "object",
                              "properties": {
                                "id": { "type": "integer" },
                                "name": { "type": "string" },
                                "email": { "type": "string" },
                                "phone": { "type": "string" },
                                "pro_pic": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "400": {
                    "description": "Validation error",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "success": { "type": "boolean" },
                            "message": { "type": "string" },
                            "errors": { "type": "object" }
                          }
                        }
                      }
                    }
                  },
                  "500": {
                    "description": "Internal server error"
                  }
                }
              }
        },
        "/api/cart/add": {
      "post": {
        "summary": "Add product to cart",
        "description": "This endpoint allows the user to add a product to their cart.",
        "operationId": "addCart",
        "tags": ["Cart"],
        "parameters": [
          {
            "name": "product_id",
            "in": "formData",
            "description": "ID of the product to add",
            "required": true,
            "type": "integer"
          },
          {
            "name": "quantity",
            "in": "formData",
            "description": "Quantity of the product to add",
            "required": true,
            "type": "integer"
          },
          {
            "name": "price",
            "in": "formData",
            "description": "Price of the product",
            "required": true,
            "type": "number",
            "format": "float"
          },
          {
            "name": "unit",
            "in": "formData",
            "description": "Unit of the product (e.g., piece, kg)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Cart added successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Cart Added Successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "integer",
                      "example": 1
                    },
                    "productId": {
                      "type": "integer",
                      "example": 101
                    },
                    "qty": {
                      "type": "integer",
                      "example": 2
                    },
                    "price": {
                      "type": "number",
                      "format": "float",
                      "example": 199.99
                    },
                    "unit": {
                      "type": "string",
                      "example": "kg"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation failed",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Validation Failed"
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "product_id": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["The product_id field is required."]
                    },
                    "quantity": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["The quantity field is required."]
                    },
                    "price": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["The price field is required."]
                    },
                    "unit": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["The unit field is required."]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong"
                },
                "error": {
                  "type": "string",
                  "example": "Database connection failed"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
        },
        "/api/categories": {
      "get": {
        "summary": "Get All Categories",
        "description": "Fetches all active categories along with their subcategories and products.",
        "parameters": [
          {
            "name": "category_id",
            "in": "query",
            "description": "Category ID to filter specific category.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with list of categories",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
        },
        "/api/cities": {
      "get": {
        "summary": "Get Cities with Landmarks",
        "description": "Fetches active cities along with their landmarks, supporting multiple languages.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page for pagination",
            "required": false,
            "type": "integer",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with list of cities and landmarks",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Cities"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "current_page": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/City"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
        },
        "/api/contact/add": {
            "post": {
              "summary": "Add a Contact",
              "description": "Adds a contact message with subject, message, contact, and email",
              "parameters": [
                {
                  "name": "subject",
                  "in": "formData",
                  "description": "Subject of the contact message",
                  "required": true,
                  "type": "string"
                },
                {
                  "name": "message",
                  "in": "formData",
                  "description": "The message content",
                  "required": true,
                  "type": "string"
                },
                {
                  "name": "contact",
                  "in": "formData",
                  "description": "Contact number",
                  "required": true,
                  "type": "string",
                  "pattern": "^[0-9]{10}$"
                },
                {
                  "name": "email",
                  "in": "formData",
                  "description": "Email address",
                  "required": true,
                  "type": "string",
                  "format": "email"
                }
              ],
              "responses": {
                "200": {
                  "description": "Successfully added contact",
                  "schema": {
                    "$ref": "#/definitions/SuccessResponse"
                  }
                },
                "400": {
                  "description": "Validation failed",
                  "schema": {
                    "$ref": "#/definitions/ErrorResponse"
                  }
                },
                "500": {
                  "description": "Internal server error",
                  "schema": {
                    "$ref": "#/definitions/ErrorResponse"
                  }
                }
              }
            }
        },
        "/api/faqs": {
            "get": {
              "summary": "Get FAQs",
              "description": "Fetches active FAQs in the user's default language with pagination",
              "parameters": [
                {
                  "name": "page",
                  "in": "query",
                  "description": "Page number for pagination",
                  "required": false,
                  "type": "integer",
                  "default": 1
                },
                {
                  "name": "limit",
                  "in": "query",
                  "description": "Number of items per page",
                  "required": false,
                  "type": "integer",
                  "default": 10
                }
              ],
              "responses": {
                "200": {
                  "description": "Successfully fetched FAQs",
                  "schema": {
                    "$ref": "#/definitions/FaqsResponse"
                  }
                },
                "500": {
                  "description": "Internal server error",
                  "schema": {
                    "$ref": "#/definitions/ErrorResponse"
                  }
                }
              }
            }
        },
        "/api/review": {
            "get": {
              "summary": "Get Reviews for a Product",
              "description": "Fetches reviews for a given product",
              "parameters": [
                {
                  "name": "product_id",
                  "in": "query",
                  "description": "ID of the product to fetch reviews for",
                  "required": true,
                  "type": "integer"
                }
              ],
              "responses": {
                "200": {
                  "description": "Successfully fetched reviews",
                  "schema": {
                    "$ref": "#/definitions/ReviewsResponse"
                  }
                },
                "500": {
                  "description": "Internal server error",
                  "schema": {
                    "$ref": "#/definitions/ErrorResponse"
                  }
                }
              }
            }
        },
        "/api/review/add": {
            "post": {
              "summary": "Add a Review",
              "description": "Adds a review for a product with rating and message",
              "parameters": [
                {
                  "name": "product_id",
                  "in": "formData",
                  "description": "ID of the product being reviewed",
                  "required": true,
                  "type": "integer"
                },
                {
                  "name": "star",
                  "in": "formData",
                  "description": "Rating of the product (1-5)",
                  "required": true,
                  "type": "integer",
                  "enum": [1, 2, 3, 4, 5]
                },
                {
                  "name": "message",
                  "in": "formData",
                  "description": "Review message content",
                  "required": true,
                  "type": "string"
                }
              ],
              "responses": {
                "200": {
                  "description": "Successfully added review",
                  "schema": {
                    "$ref": "#/definitions/SuccessResponse"
                  }
                },
                "400": {
                  "description": "Validation failed",
                  "schema": {
                    "$ref": "#/definitions/ErrorResponse"
                  }
                },
                "500": {
                  "description": "Internal server error",
                  "schema": {
                    "$ref": "#/definitions/ErrorResponse"
                  }
                }
              }
            }
        },
        "/api/review/update/{id}": {
            "put": {
              "summary": "Update a Review",
              "description": "Updates an existing review for a product",
              "parameters": [
                {
                  "name": "id",
                  "in": "path",
                  "description": "ID of the review to update",
                  "required": true,
                  "type": "integer"
                },
                {
                  "name": "product_id",
                  "in": "formData",
                  "description": "ID of the product being reviewed",
                  "required": true,
                  "type": "integer"
                },
                {
                  "name": "star",
                  "in": "formData",
                  "description": "Rating of the product (1-5)",
                  "required": true,
                  "type": "integer",
                  "enum": [1, 2, 3, 4, 5]
                },
                {
                  "name": "message",
                  "in": "formData",
                  "description": "Updated review message content",
                  "required": true,
                  "type": "string"
                }
              ],
              "responses": {
                "200": {
                  "description": "Successfully updated review",
                  "schema": {
                    "$ref": "#/definitions/SuccessResponse"
                  }
                },
                "400": {
                  "description": "Validation failed",
                  "schema": {
                    "$ref": "#/definitions/ErrorResponse"
                  }
                },
                "500": {
                  "description": "Internal server error",
                  "schema": {
                    "$ref": "#/definitions/ErrorResponse"
                  }
                }
              }
            }
        },
        "/order": {
            "post": {
              "tags": ["Order"],
              "summary": "Place a new order",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "order": {
                          "type": "object",
                          "required": [
                            "total_order_amt",
                            "dis_amt_point",
                            "total_bill_amt",
                            "delivery_slot_id",
                            "shipping_id",
                            "payment_mode",
                            "order_status",
                            "orderDetails"
                          ],
                          "properties": {
                            "total_order_amt": { "type": "number" },
                            "dis_amt_point": { "type": "number" },
                            "total_bill_amt": { "type": "number" },
                            "delivery_slot_id": { "type": "integer" },
                            "shipping_id": { "type": "integer" },
                            "payment_mode": { "type": "string" },
                            "order_status": { "type": "string" },
                            "orderDetails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "product_id",
                                  "quantity",
                                  "price",
                                  "unit",
                                  "total"
                                ],
                                "properties": {
                                  "product_id": { "type": "integer" },
                                  "quantity": { "type": "number" },
                                  "price": { "type": "number" },
                                  "unit": { "type": "string" },
                                  "total": { "type": "number" },
                                  "cart_id": { "type": "integer", "nullable": true }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Order placed successfully"
                },
                "400": {
                  "description": "Validation error"
                },
                "500": {
                  "description": "Server error"
                }
              },
              "security": [
                {
                  "bearerAuth": []
                }
              ]
            }
        },
        "/point-per": {
            "get": {
              "tags": ["Order"],
              "summary": "Get point-per value",
              "responses": {
                "200": {
                  "description": "Successfully retrieved point-per value"
                },
                "500": {
                  "description": "Server error"
                }
              },
              "security": [
                {
                  "bearerAuth": []
                }
              ]
            }
        },
        "/my-orders": {
            "get": {
              "tags": ["Order"],
              "summary": "Get my orders",
              "parameters": [
                {
                  "name": "page",
                  "in": "query",
                  "schema": { "type": "integer" },
                  "description": "Page number"
                },
                {
                  "name": "limit",
                  "in": "query",
                  "schema": { "type": "integer" },
                  "description": "Number of orders per page"
                }
              ],
              "responses": {
                "200": {
                  "description": "Successfully retrieved orders"
                },
                "500": {
                  "description": "Server error"
                }
              },
              "security": [
                {
                  "bearerAuth": []
                }
              ]
            }
        },
        "/order-details/{id}": {
            "get": {
              "tags": ["Order"],
              "summary": "Get order details by ID",
              "parameters": [
                {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": { "type": "integer" }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successfully retrieved order details"
                },
                "404": {
                  "description": "Order not found"
                },
                "500": {
                  "description": "Server error"
                }
              },
              "security": [
                {
                  "bearerAuth": []
                }
              ]
            }
        },
        "/api/customer/products": {
      "post": {
        "summary": "Fetch products by category ID",
        "tags": ["Product"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["category_id"],
                "properties": {
                  "category_id": {
                    "type": "integer"
                  },
                  "page": {
                    "type": "integer"
                  },
                  "search": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product list response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
        },
        "/api/customer/home-products": {
      "get": {
        "summary": "Fetch products marked as home display",
        "tags": ["Product"],
        "responses": {
          "200": {
            "description": "List of home page products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
        },
        "/api/customer/all-products": {
        "post": {
        "summary": "Fetch all products, with optional related product support",
        "tags": ["Product"],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "integer"
                  },
                  "search": {
                    "type": "string"
                  },
                  "product_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Full or related products list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
        },
        "components": {
          "securitySchemes": {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        },
        "security":
        {
            "bearerAuth": []
        },


        "SuccessResponse": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "data": {
                "type": "object"
              }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "error": {
                "type": "string"
              }
            }
        },
        "FaqsResponse": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Faq"
                }
              }
            }
        },
        "ReviewsResponse": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Review"
                }
              }
            }
        },
        "Faq": {
            "type": "object",
            "properties": {
              "displayQuestion": {
                "type": "string"
              },
              "displayAnswer": {
                "type": "string"
              }
            }
        },
        "Review": {
            "type": "object",
            "properties": {
              "product_id": {
                "type": "integer"
              },
              "star": {
                "type": "integer"
              },
              "message": {
                "type": "string"
              }
    },

    "City": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "City ID"
        },
        "displayName": {
          "type": "string",
          "description": "Localized name of the city"
        },
        "displayArea": {
          "type": "string",
          "description": "Localized area of the city"
        },
        "landmark": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Landmark"
          },
          "description": "Landmarks associated with the city"
        }
      }
    },
    "Landmark": {
      "type": "object",
      "properties": {
        "displayLandmark": {
          "type": "string",
          "description": "Localized landmark name"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Error message"
        },
        "error": {
          "type": "string",
          "description": "Detailed error information"
        }
    },

    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID"
        },
        "categoryName": {
          "type": "string",
          "description": "Name of the category"
        },
        "categoryDescription": {
          "type": "string",
          "description": "Description of the category"
        },
        "displayName": {
          "type": "string",
          "description": "Localized category name"
        },
        "displayDescription": {
          "type": "string",
          "description": "Localized category description"
        },
        "childs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Category"
          },
          "description": "Subcategories of the category"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Error message"
        },
        "error": {
          "type": "string",
          "description": "Detailed error information"
        }

    },

      "definitions": {
      "Error": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "message": {
          "type": "string",
          "example": "Validation Failed"
        },
        "errors": {
          "type": "object"
        }
      }
      },
     "Success": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "message": {
          "type": "string",
          "example": "Cart Added Successfully"
        },
        "data": {
          "type": "object",
          "properties": {
            "userId": {
              "type": "integer",
              "example": 1
            },
            "productId": {
              "type": "integer",
              "example": 101
            },
            "qty": {
              "type": "integer",
              "example": 2
            },
            "price": {
              "type": "number",
              "format": "float",
              "example": 199.99
            },
            "unit": {
              "type": "string",
              "example": "kg"
            }
          }
        }
      }
    }
     },
     "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
    },









    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        }
    ]







    }
    }
        }
        },
        "/api/customer/shipping-addresses": {
      "get": {
        "summary": "Get all shipping addresses with landmark",
        "tags": ["Shipping Address"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shipping addresses with landmarks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
        },
        "/api/customer/shipping-addresses/add": {
        "post": {
        "summary": "Add a new shipping address",
        "tags": ["Shipping Address"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "address_line1",
                  "address_line2",
                  "pincode",
                  "landmark_id"
                ],
                "properties": {
                  "address_line1": {
                    "type": "string"
                  },
                  "address_line2": {
                    "type": "string"
                  },
                  "pincode": {
                    "type": "string"
                  },
                  "landmark_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Shipping address added",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
        },
        "/api/customer/shipping-addresses/update/{id}": {
      "put": {
        "summary": "Update an existing shipping address",
        "tags": ["Shipping Address"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "address_line1",
                  "address_line2",
                  "pincode",
                  "landmark_id"
                ],
                "properties": {
                  "address_line1": {
                    "type": "string"
                  },
                  "address_line2": {
                    "type": "string"
                  },
                  "pincode": {
                    "type": "string"
                  },
                  "landmark_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Shipping address updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
        },
        "/api/customer/shipping-addresses/delete/{id}": {
      "delete": {
        "summary": "Delete a shipping address",
        "tags": ["Shipping Address"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shipping address deleted (deactivated)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
        },
        "/api/customer/shipping-addresses/user": {
      "get": {
        "summary": "Get user-specific shipping addresses with localized landmark",
        "tags": ["Shipping Address"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User's shipping addresses with localized landmark",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
    }
        },
        "/api/customer/sliders": {
            "get": {
              "summary": "Get all active sliders with city and navigation data",
              "tags": ["Slider"],
              "responses": {
                "200": {
                  "description": "List of sliders with city and navigatemaster relations",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
        }
    }
}

